apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'com.cookpad.android.licensetools'
apply plugin: "de.mannodermaus.android-junit5"
apply plugin: 'androidx.navigation.safeargs'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.syousa1982.todo4android"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    // DataBindingを有効化
    dataBinding {
        enabled = true
    }
    buildTypes {
        debug {
            resValue "string", "app_name", "ToDo 開発"
            minifyEnabled false
            shrinkResources false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            resValue "string", "app_name", "ToDo"
            minifyEnabled true
            shrinkResources true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    // ビルド環境を設定
    flavorDimensions "default"
    // ソースディレクトリを指定
    sourceSets {
        // 共通ソース(Javaディレクトリが自動生成されないようにKotlinディレクトリを先に配置)
        main {
            java.srcDirs = ['src/main/kotlin', 'src/main/java']
        }
        // テスト環境ソース
        test {
            java.srcDirs += 'src/test/kotlin'
        }
        // テスト(Android)環境ソース
        androidTest {
            java.srcDirs += 'src/androidTest/kotlin'
        }
    }
    // Lintオプションを設定
    // "./gradlew lint"で実行
    lintOptions {
        // Lint設定ファイル
        lintConfig file("lint-config.xml")
        // Lint結果出力
        htmlReport true
        htmlOutput file("$buildDir/reports/lint-results.html")
        abortOnError false
    }
    // Lintオプションを設定
    // "./gradlew test"で実行
    testOptions {
        unitTests {
            includeAndroidResources = true
            unitTests.returnDefaultValues = true
        }
        junitPlatform {
            filters {
                engines {
                    include 'spek2'
                }
            }
        }
    }
}

kapt {
    generateStubs = true
    javacOptions {
        option("-Xmaxerrs", 5000)
    }
}

configurations {
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}


dependencies {
    // Language
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    // AndroidX
    implementation "com.google.android.material:material:1.0.0"
    implementation "androidx.constraintlayout:constraintlayout:2.0.0-beta1"
    implementation "androidx.appcompat:appcompat:1.0.2"
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.browser:browser:1.0.0"
    implementation "androidx.annotation:annotation:1.0.2"
    implementation "androidx.exifinterface:exifinterface:1.0.0"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation "android.arch.navigation:navigation-fragment:$nav_version" // use -ktx for Kotlin
    implementation "android.arch.navigation:navigation-ui:$nav_version" // use -ktx for Kotlin
    // Converter
    kapt "se.ansman.kotshi:compiler:$kotshi_version"
    implementation "se.ansman.kotshi:api:$kotshi_version"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-adapters:$moshi_version"
    // DI
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    // UI
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.xwray:groupie:$groupie_version"
    implementation "com.xwray:groupie-databinding:$groupie_version"
    implementation "com.xwray:groupie-kotlin-android-extensions:$groupie_version"
    // Reactive
    implementation "io.reactivex.rxjava2:rxjava:2.2.8"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation "io.reactivex.rxjava2:rxkotlin:2.3.0"
    // Test
    testImplementation "org.robolectric:robolectric:4.2.1"
    androidTestImplementation "androidx.test:runner:1.1.1"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.1.1"
    testImplementation "org.dbtools:dbtools-room-jdbc:$dbtoolsRoomVersion"
    testImplementation "org.xerial:sqlite-jdbc:3.27.2"

    // spek
    testImplementation 'org.junit.platform:junit-platform-runner:1.1.0'
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:$spek_version"
    testImplementation "org.spekframework.spek2:spek-runner-junit5:$spek_version"

    // MockK
    testImplementation("io.mockk:mockk:$mockk_version")
}
// GoogleServicesプラグインを適用(dependenciesよりも下に設定する)
//apply plugin: "com.google.gms.google-services"

